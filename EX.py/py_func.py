# abs 숫자 입력 받았을 때 그 숫자의 절댓값 리턴
a = abs(-3.112)
print(a)

#------------------------------------------------------------------
# all 반복 가능한 데이터 x를 입력값으로 받으며 x의 요소가 모두 참이면 True, 거짓이 하나라도 있으면 False 리턴
a = all([1,2,3,4,5])
print(a)

b = all([])
print(b)    # 거짓인 요소가 없으므로 True

c = all([1,2,3,0])
print(c)    # false

# False 로 간주되는 경우
# None, False, 숫자 0, 빈 시퀀스나 컬렉션(빈 리스트, 빈 튜플, 빈 딕셔너리, 빈 세트 등..)

#------------------------------------------------------------------
# any 반복 가능한 데이터 x를 입력값으로 받으며 x의 요소 중 하나라도 참이면 True, x가 모두 거짓일 때 False
d = any([1,2,3,4])
print(d)

e = any([0,''])
print(e)

f = any([])
print(f)    # 참인 요소가 없으므로 False

#------------------------------------------------------------------
# chr 유니코드 숫자 값을 입력 받아 그 코드에 해당하는 문자 리턴
a = chr(44032)
print(a)

a = chr(65)
print(a)

print('-----------')
# ord() 문자의 유니코드 숫자 값을 리턴
a = ord('a')
print(a)

#------------------------------------------------------------------
# divmod(a,b) a를 b로 나눈 몫과 나머지를 튜플로 리턴
a = divmod(7,3)
print(a)

#------------------------------------------------------------------
# enumerate() 함수는 순서가 있는 데이터(리스트, 튜플, 문자열)를 입력으로 받아 인덱스 값을 포함하는 enumerate 객체를 리턴
# for문과 함께 사용
for i, name in enumerate(['body', 'foo', 'bar']):
  print(i, name)

#------------------------------------------------------------------
# eval() 문자열로 구성된 표현식을 입력 받아 해당 문자열을 실행한 결과값을 리턴
a = eval('1+2')
print(a)

a = eval("'hi'+ 'Hello'")
print(a)

a = eval('divmod(14,6)')
print(a)

#------------------------------------------------------------------
# filter(함수, 반복_가능한_데이터)  filter(function, iterable)
letters = ['a', 'b', 'c', 'd', 'e', 'i', 'o', 'u']

# 람다 함수를 사용하여 모음만 걸러냄
vowels = filter(lambda letter: letter in 'aeiou', letters)

# 결과를 리스트로 변환하여 출력
print(list(vowels))  # 출력: ['a', 'e', 'i', 'o', 'u']

#------------------------------------------------------------------
# hex 16진수 문자열로 변환 후 리턴
a = hex(3456)
print(a)

#------------------------------------------------------------------
# id() 객체의 고유한 아이디를 리턴
a = 3
b = a
print(id(a))
print(id(b))

#------------------------------------------------------------------
# input 사용자 입력 받는 함수
# a = input("Enter : ")
# print(a)

#------------------------------------------------------------------
# int() 문자열을 정수로 리턴
# int(x, radix) radix 진수로 표현된 문자열 x를 10진수로 변환 후 리턴
a= int('11', 36)
print(a)

#------------------------------------------------------------------
# isinstance(obj, class) obj(객체)가 클래스의 인스턴스인지 판단 (T/F)

#------------------------------------------------------------------
# max 유니코드 값, 그 문자열의 최대값을 리턴
a = max("python")
print(a)  # y

# min 유니코드 값, 그 문자열의 최소값을 리턴
a = min("python")
print(a)  # h
#------------------------------------------------------------------
# oct() 10진수를 8진수 문자열로 변환 후 리턴
a = oct(454)
print(a)

#------------------------------------------------------------------
# range([start,] stop [,step]) start부터 stop까지 step만큼 증가하는 정수 리스트를 생성
a = list(range(5))  # 시작 숫자 미지정 시 0부터 시작
print(a)

a = list(range(1, 5))  # 끝 숫자는 범위에 포함되지 않음
print(a)

a = list(range(1, 10, 2))  # step은 2로 설정, 인수 사이 거리
print(a)

#------------------------------------------------------------------
# round(num, ndigits) 반올림, ndigits 자릿수까지 반올림
a = round(3.141592, 2)
print(a)

a = round(3.141592)
print(a)

#------------------------------------------------------------------
# sorted() 정렬된 리스트를 반환
a = sorted([3, 1, 2])
print(a)

a = sorted(['a', 'c', 'b'])
print(a)

a = sorted("zero")
print(a)

a = sorted((3, 2, 1))
print(a)

#------------------------------------------------------------------
# str(obj) 문자열 형태로 변환하여 리턴 + type(obj) 입력한 자료형 확인
a = str(3.141592)
print(a)

a = str(345)
print(type(a))

#------------------------------------------------------------------
# sum() 리스트의 모든 요소를 더한 값을 리턴
a = sum([1,2,3,4,4,5])
print(a)